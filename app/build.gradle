apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    def DEF_APP_ANME = "小淘同学"
    def DEF_APPLICATION_ID = "com.hamitao.kids"
    def DEF_VERSION_ANME = "1.0.0"
    def DEF_VERSION_CODE = 1
    def DEF_APP_ICON = "@drawable/app_logo"

    //默认配置
    defaultConfig {

        //最低版本
        minSdkVersion rootProject.ext.minSdkVersion
        //目标版本
        targetSdkVersion rootProject.ext.targetSdkVersion
        //包名
//        applicationId project.hasProperty("cusAppId") ? cusAppId : DEF_APPLICATION_ID
        //应用名
//        resValue "string", "app_name", project.hasProperty("cusAppName") ? cusAppName : DEF_APP_ANME
        //版本号
//        versionCode project.hasProperty("cusVersionCode") ? cusVersionCode : DEF_VERSION_CODE
        //版本名
//        versionName project.hasProperty("cusVersionName") ? cusVersionName : DEF_VERSION_ANME

        multiDexEnabled true//解决编译时出现"finished with non-zero exit value 2"的报错,通常是因为jar包重复导致的

        //内存泄漏配置
//        configurations.all { config ->
//            if (config.name.contains('UnitTest')) {
//                config.resolutionStrategy.eachDependency { details ->
//                    if (details.requested.group == 'com.squareup.leakcanary' && details.requested.name == 'leakcanary-android') {
//                        details.useTarget(group: details.requested.group, name: 'leakcanary-android-no-op', version: details.requested.version)
//                    }
//                }
//            }
//        }

        //路由框架
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["moduleName": project.name]
            }
        }

        android.compileOptions.sourceCompatibility 1.8
        android.compileOptions.targetCompatibility 1.8

        ndk {
            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            abiFilters "armeabi"
//            , "armeabi-v7a", "arm64-v8a", "x86",  "x86_64"
        }
    }

    //默认的密钥配置
    signingConfigs {
        debug {
            storeFile file('D:/keystore/hamitao.jks')
            storePassword("hamitao888")   //你自己的keystore密码
            keyAlias 'hamitao'   //key别名
            keyPassword 'hamitao888'   //key密码
        }
        release {
            storeFile file('D:/keystore/hamitao.jks')
            storePassword("hamitao888")
            keyAlias "hamitao"
            keyPassword "hamitao888"
        }
    }

    //渠道密钥配置
    signingConfigs {
        hamitaoDebug {
            storeFile file('D:/keystore/hamitao.jks')
            storePassword("hamitao888")   //你自己的keystore密码
            keyAlias 'hamitao'   //key别名
            keyPassword 'hamitao888'   //key密码
        }
        hamitaoRelease {
            storeFile file('D:/keystore/hamitao.jks')
            storePassword("hamitao888")
            keyAlias "hamitao"
            keyPassword "hamitao888"
        }

        jinguoweiDebug {
            storeFile file('D:/keystore/hamitao.jks')
            storePassword("hamitao888")   //你自己的keystore密码
            keyAlias 'hamitao'   //key别名
            keyPassword 'hamitao888'   //key密码
        }
        jinguoweiRelease {
            storeFile file('D:/keystore/hamitao.jks')
            storePassword("hamitao888")
            keyAlias "hamitao"
            keyPassword "hamitao888"
        }
        haierDebug {
            storeFile file('D:/keystore/haier.jks')
            storePassword("123456")
            keyAlias "haier"
            keyPassword "123456"
        }
        haierRelease {
            storeFile file('D:/keystore/haier.jks')
            storePassword("123456")
            keyAlias "haier"
            keyPassword "123456"
        }
    }

    //multiDex的一些相关配置，这样配置可以让你的编译速度更快
    dexOptions {
        preDexLibraries = false
        //开启incremental dexing,优化编译效率，这个功能android studio默认是关闭的。
        javaMaxHeapSize "4g"     //增加java堆内存大小
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    buildTypes {
        debug {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            //Zipalign优化
            zipAlignEnabled true
            //移除无用的resource文件
            shrinkResources false
            //混淆
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig null  // 置空
        }
        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            //Zipalign优化
            zipAlignEnabled true
            //移除无用的resource文件
            shrinkResources true
            //混淆
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig null  // 置空
        }
    }



//为了兼容Android旧版本的httpClient
    useLibrary 'org.apache.http.legacy'

    flavorDimensions "default"

    productFlavors {

        hamitao {
            applicationId 'com.hamitao.kids'
//            signingConfig = signingConfigs.hamitaoRelease
            //20190116
            versionCode 4
            versionName 'tao_ 1.6.101'
            resValue "string", "app_name", "小淘同学"
            //极光推送
            manifestPlaceholders = [
                    JPUSH_PKGNAME: applicationId,
                    JPUSH_APPKEY : "2822915cb877d822d680a6e2", //JPush上注册的包名对应的appkey.
                    JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
            ]
        }

        haier {
            applicationId 'com.hamitao.haierrobot'
//            signingConfig = signingConfigs.haierRelease
            versionCode 1
            versionName 'shu_1.6.100'
            resValue "string", "app_name", "小帅"
            //极光推送
            manifestPlaceholders = [
                    JPUSH_PKGNAME: applicationId,
                    JPUSH_APPKEY : "56063ae7d9f17469655e1d2c", //JPush上注册的包名对应的appkey.
                    JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
            ]
        }

        jinguowei {
            applicationId 'com.hamitao.jgwrobot'
//            signingConfig = signingConfigs.jinguoweiRelease
            versionCode 1
            versionName '1.0.0'
            resValue "string", "app_name", '果果同学'
            //极光推送
            manifestPlaceholders = [
                    JPUSH_PKGNAME: applicationId,
                    JPUSH_APPKEY : "d491f17da02a31dcc820f983", //JPush上注册的包名对应的appkey.
                    JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
            ]
        }


    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:27.1.0'
    //依赖注入（每个module需要单独写）
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
    //每个Module都要单独写路由框架依赖
    compile 'com.chenenyu.router:router:1.3.3'
    annotationProcessor 'com.chenenyu.router:compiler:1.3.3'
    compile project(':P2PVideo')
    implementation project(':common_res')
}
